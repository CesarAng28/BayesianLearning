"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDocumentationHtml = exports.HTMLView = void 0;
const React = __importStar(require("react"));
const dompurify_1 = __importDefault(require("dompurify"));
const MarkdownRenderer_1 = require("../MarkdownRenderer");
class HTMLView extends React.Component {
    render() {
        return (React.createElement("div", { className: this.props.containerClassName, onWheel: (e) => this.onMouseWheel(e) },
            React.createElement("div", { className: this.props.contentClassName, dangerouslySetInnerHTML: {
                    __html: dompurify_1.default.sanitize(this.props.html),
                } })));
    }
    onMouseWheel(evt) {
        evt.stopPropagation();
    }
}
exports.HTMLView = HTMLView;
async function getDocumentationHtml(markdownTexts, grammarName, renderer) {
    if (markdownTexts !== undefined && markdownTexts.length > 0) {
        const markdownText = markdownTexts.join("\r\n");
        if (renderer) {
            return renderer.render(markdownText, grammarName);
        }
        else {
            const render = await MarkdownRenderer_1.getMarkdownRenderer();
            return render(markdownText, grammarName);
        }
    }
    return null;
}
exports.getDocumentationHtml = getDocumentationHtml;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSFRNTFZpZXcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMtY29tbW9ucy11aS9mbG9hdC1wYW5lL0hUTUxWaWV3LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsNkNBQThCO0FBQzlCLDBEQUFpQztBQUVqQywwREFBeUQ7QUFhekQsTUFBYSxRQUFTLFNBQVEsS0FBSyxDQUFDLFNBQXVCO0lBQ3pELE1BQU07UUFDSixPQUFPLENBQ0wsNkJBQUssU0FBUyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsa0JBQWtCLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztZQUNqRiw2QkFDRSxTQUFTLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsRUFDdEMsdUJBQXVCLEVBQUU7b0JBQ3ZCLE1BQU0sRUFBRSxtQkFBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztpQkFDNUMsR0FDRCxDQUNFLENBQ1AsQ0FBQTtJQUNILENBQUM7SUFNRCxZQUFZLENBQUMsR0FBcUI7UUFDaEMsR0FBRyxDQUFDLGVBQWUsRUFBRSxDQUFBO0lBQ3ZCLENBQUM7Q0FDRjtBQXJCRCw0QkFxQkM7QUFTTSxLQUFLLFVBQVUsb0JBQW9CLENBQ3hDLGFBQTRCLEVBQzVCLFdBQW1CLEVBQ25CLFFBQTBCO0lBRTFCLElBQUksYUFBYSxLQUFLLFNBQVMsSUFBSSxhQUFhLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtRQUMzRCxNQUFNLFlBQVksR0FBRyxhQUFhLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFBO1FBQy9DLElBQUksUUFBUSxFQUFFO1lBQ1osT0FBTyxRQUFRLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBRSxXQUFXLENBQUMsQ0FBQTtTQUNsRDthQUFNO1lBRUwsTUFBTSxNQUFNLEdBQUcsTUFBTSxzQ0FBbUIsRUFBRSxDQUFBO1lBQzFDLE9BQU8sTUFBTSxDQUFDLFlBQVksRUFBRSxXQUFXLENBQUMsQ0FBQTtTQUN6QztLQUNGO0lBQ0QsT0FBTyxJQUFJLENBQUE7QUFDYixDQUFDO0FBaEJELG9EQWdCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXHJcbmltcG9ydCBET01QdXJpZnkgZnJvbSBcImRvbXB1cmlmeVwiXHJcbmltcG9ydCB7IE1hcmtkb3duU2VydmljZSB9IGZyb20gXCIuLi8uLi90eXBlcy1wYWNrYWdlcy9tYWluXCJcclxuaW1wb3J0IHsgZ2V0TWFya2Rvd25SZW5kZXJlciB9IGZyb20gXCIuLi9NYXJrZG93blJlbmRlcmVyXCJcclxuXHJcbmludGVyZmFjZSBQcm9wcyB7XHJcbiAgaHRtbDogc3RyaW5nXHJcbiAgY29udGFpbmVyQ2xhc3NOYW1lOiBzdHJpbmdcclxuICBjb250ZW50Q2xhc3NOYW1lOiBzdHJpbmdcclxufVxyXG5cclxuaW50ZXJmYWNlIFN0YXRlIHt9XHJcblxyXG4vKipcclxuICogQSByZWFjdCBjb21wb25lbnQgdGhhdCBjYW4gaG9zdCBhbHJlYWR5IHByZXBhcmVkIEhUTUwgdGV4dCAoZW1iZWRzIEhUTUwpXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgSFRNTFZpZXcgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8UHJvcHMsIFN0YXRlPiB7XHJcbiAgcmVuZGVyKCkge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgPGRpdiBjbGFzc05hbWU9e3RoaXMucHJvcHMuY29udGFpbmVyQ2xhc3NOYW1lfSBvbldoZWVsPXsoZSkgPT4gdGhpcy5vbk1vdXNlV2hlZWwoZSl9PlxyXG4gICAgICAgIDxkaXZcclxuICAgICAgICAgIGNsYXNzTmFtZT17dGhpcy5wcm9wcy5jb250ZW50Q2xhc3NOYW1lfVxyXG4gICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3tcclxuICAgICAgICAgICAgX19odG1sOiBET01QdXJpZnkuc2FuaXRpemUodGhpcy5wcm9wcy5odG1sKSxcclxuICAgICAgICAgIH19XHJcbiAgICAgICAgLz5cclxuICAgICAgPC9kaXY+XHJcbiAgICApXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBoYW5kbGVzIHRoZSBtb3VzZSB3aGVlbCBldmVudCB0byBlbmFibGUgc2Nyb2xsaW5nIG92ZXIgbG9uZyB0ZXh0XHJcbiAgICogQHBhcmFtIGV2dCB0aGUgbW91c2Ugd2hlZWwgZXZlbnQgYmVpbmcgdHJpZ2dlcmVkXHJcbiAgICovXHJcbiAgb25Nb3VzZVdoZWVsKGV2dDogUmVhY3QuV2hlZWxFdmVudCkge1xyXG4gICAgZXZ0LnN0b3BQcm9wYWdhdGlvbigpXHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogY29udmVydCB0aGUgbWFya2Rvd24gZG9jdW1lbnRhdGlvbiB0byBIVE1MXHJcbiAqIEBwYXJhbSBtYXJrZG93blRleHRzIHRoZSBkb2N1bWVudGF0aW9uIHRleHQgaW4gbWFya2Rvd24gZm9ybWF0IHRvIGJlIGNvbnZlcnRlZFxyXG4gKiBAcGFyYW0gZ3JhbW1hck5hbWUgIHRoZSBkZWZhdWx0IGdyYW1tYXIgdXNlZCBmb3IgZW1iZWRkZWQgY29kZSBzYW1wbGVzXHJcbiAqIEBwYXJhbSByZW5kZXJlciBtYXJrZG93biBzZXJ2aWNlIHRvIGJlIHVzZWQgZm9yIHJlbmRlcmluZ1xyXG4gKiBAcmV0dXJuIGEgcHJvbWlzZSBvYmplY3QgdG8gdHJhY2sgdGhlIGFzeW5jaHJvbm91cyBvcGVyYXRpb25cclxuICovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXREb2N1bWVudGF0aW9uSHRtbChcclxuICBtYXJrZG93blRleHRzOiBBcnJheTxTdHJpbmc+LFxyXG4gIGdyYW1tYXJOYW1lOiBzdHJpbmcsXHJcbiAgcmVuZGVyZXI/OiBNYXJrZG93blNlcnZpY2VcclxuKTogUHJvbWlzZTxzdHJpbmcgfCBudWxsPiB7XHJcbiAgaWYgKG1hcmtkb3duVGV4dHMgIT09IHVuZGVmaW5lZCAmJiBtYXJrZG93blRleHRzLmxlbmd0aCA+IDApIHtcclxuICAgIGNvbnN0IG1hcmtkb3duVGV4dCA9IG1hcmtkb3duVGV4dHMuam9pbihcIlxcclxcblwiKVxyXG4gICAgaWYgKHJlbmRlcmVyKSB7XHJcbiAgICAgIHJldHVybiByZW5kZXJlci5yZW5kZXIobWFya2Rvd25UZXh0LCBncmFtbWFyTmFtZSlcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIC8vIFVzZSBidWlsdC1pbiBtYXJrZG93biByZW5kZXJlciB3aGVuIHRoZSBtYXJrZG93biBzZXJ2aWNlIGlzIG5vdCBhdmFpbGFibGVcclxuICAgICAgY29uc3QgcmVuZGVyID0gYXdhaXQgZ2V0TWFya2Rvd25SZW5kZXJlcigpXHJcbiAgICAgIHJldHVybiByZW5kZXIobWFya2Rvd25UZXh0LCBncmFtbWFyTmFtZSlcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIG51bGxcclxufVxyXG4iXX0=